{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red42\green0\blue255;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww12360\viewh7720\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 The NFC_REST_Server project can be ran on NetBeans with GlassFish Server 3.1.\
\
When NFC_REST_Server is deployed, the REST service can be tested by just right-clicking on the project and then on "Test RESTful Web Services". After that select the first option "Locally Generated Test Client" and you'll be redirected to your browser.\
\
There you''ll be able to test the GET and the PUT methods,.\
There are no tags (bottles) stored at first, you can use the PUT method to add a bottle in the content text field\
(e.g. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f1 \cf0 <bottle>\
<id>53gsa7</id>\
\pard\pardeftab720\ql\qnatural
\cf0 <temp>12</temp>\
</bottle>
\f0 ).\
Then use the GET method to display all the bottles and their temperature.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \
When NFC_REST_Server is deployed, the SWoT_NFC project can be imported on Eclipse.\
\
Make sure to set the correct IP address of the server running the REST web service.\
(e.g. 
\f2\fs22 \cf2 private\cf0  \cf2 final\cf0  String \cf3 SERVER\cf0  = \cf4 "192.168.1.2"\cf0 ; 
\f0\fs24 )\
\
When using a NFC phone with a tag, just scan the tag and you'll be redirected to the app.\
\
If you don't have a NFC phone, you can still use the simulator inside the app.\
\
The scanned tags (real or fake) can be viewed from the app in the "Display" tab.}